.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "NE_I18N_INIT" "3" "23 January 2007" "neon 0.26.3" "neon API reference"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
ne_i18n_init \- functions to initialize internationalization support
.SH "SYNOPSIS"
.PP
\fB#include <ne_i18n.h>\fR
.HP 18
\fBvoid\ \fBne_i18n_init\fR\fR\fB(\fR\fBconst\ char\ *\fR\fB\fIencoding\fR\fR\fB);\fR
.SH "DESCRIPTION"
.PP
The
\fBne_i18n_init\fR
function can be used to enable support for translated messages in the neon library. The
\fIencoding\fR
parameter, if non\-NULL, specifies the character encoding required for generated translated string. If it is
NULL, the appropriate character encoding for the process locale will be used.
.PP
This call is only strictly necessary if either:
.TP 3
1.
neon has been installed into a different prefix than the
gettext
implementation on which it depends for i18n purposes, or
.TP
2.
the caller requires that translated messages are in a particular character encoding.
.PP
If
\fBne_i18n_init\fR
is never called, the message catalogs will not be found if case (a) applies (and so English error messages will be used), and will use the default character encoding specified by the process locale. The library will otherwise operate correctly.
.PP
Note that the encoding used is a process\-global setting and so results may be unexpected if other users of neon within the process call
\fBne_i18n_init\fR
with a different encoding parameter.
.SH "SEE ALSO"
.PP
ne_sock_init
